c({"name": "can.Observe.static.validateRangeOf", "params": {"attrNames": {"description": "<p>Attribute name(s) to to validate</p>", "type": "Array|String", "optional": false, "order": 0, "name": "attrNames"}, "low": {"description": "<p>Minimum value (inclusive)</p>", "type": "Number", "optional": false, "order": 1, "name": "low"}, "hi": {"description": "<p>Maximum value (inclusive)</p>", "type": "Number", "optional": false, "order": 2, "name": "hi"}, "options": {"description": "<p>(optional) Options for the validations.  Valid options include 'message' and 'testIf'.</p>", "type": "Object", "optional": true, "order": 3, "name": "options"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p>Validates that the specified attributes are in the given numeric range.</p>\n\n<pre><code>init : function(){\n  this.validateRangeOf([\"age\"],21, 130);  \n}\n</code></pre>", "parents": ["can.Observe.validations"], "src": {"query": "", "fragment": "", "path": "can/observe/validations/validations.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 257, "children": []})
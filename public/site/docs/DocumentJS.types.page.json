c({"name": "DocumentJS.types.page", "type": "class", "comment": "<p>Defines a standalone documentation page.</p>\n\n<p>Used to organize your documentation in a flexible manner.</p>\n\n<h3>Example:</h3>\n\n<pre><code class='javascript'>/**\n * @page follow Follow JavaScriptMVC\n * #Following JavaScriptMVC\n * ##Twitter\n * [![twitter][2]][1]\n * [1]: http://twitter.com/javascriptmvc\n * [2]: http://wiki.javascriptmvc.com/wiki/images/f/f7/Twitter.png\n *\n * Follow [http://twitter.com/javascriptmvc @javascriptmvc] on twitter for daily useful tips.\n * ##Blog\n * [![blog][2]][1]\n * [1]: http://jupiterit.com/\n * [2]: http://wiki.javascriptmvc.com/wiki/images/e/e5/Blog.png  \n *\n * Read [http://jupiterit.com/ JavaScriptMVC's Blog] for articles, techniques and ideas\n * on maintainable JavaScript.\n * ##Email List\n * [![email list][2]][1]\n * [1]: http://forum.javascriptmvc.com/\n * [2]: http://wiki.javascriptmvc.com/wiki/images/8/84/Discuss.png  \n\n * Discuss ideas to make the framework better or problems you are having on  [http://forum.javascriptmvc.com/ JavaScriptMVC's Forum] \n.*\n */</code></pre>\n\n<h3>End Result:</h3>\n\n<p><img class='image_tag' src='jmvc/images/page_type_example.png' width='970' /> </p>", "tags": ["documentation"], "parents": ["DocumentJS.types"], "src": {"query": "", "fragment": "", "path": "documentjs/types/page.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1, "children": ["DocumentJS.types.page.parent"]})
c({"name": "can.Observe.List.prototype.concat", "params": {"args...": {"order": 0, "description": "<p>One or more arrays or observable lists to concatenate</p>", "name": "args...", "type": "Array|can.Observe.List", "optional": false}}, "ret": {"description": "<p>The concatenated list</p>", "type": "can.Observe.List"}, "type": "function", "parents": ["can.Observe.List.prototype"], "comment": "<p><code>concat(args...)</code> returns a new can.Observe.List comprised of this list joined with other\narray(s), value(s) and can.Observe.Lists.</p>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/concat\">MDN reference</a></p>", "src": {"query": "", "fragment": "", "path": "can/observe/observe.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1514, "children": []})
c({"name": "steal.coffee", "type": "page", "comment": "<p>Requires a [http://jashkenas.github.com/coffee-script/ CoffeeScript] script.</p>\n\n<p>CoffeeScript is a more 'refined' version of JavaScript that lets you write code like:</p>\n\n<pre><code class='javascript'>number = -42 if opposite</code></pre>CoffeeScript is normally used on the server, but steal lets you load CoffeeScripts\nin the browser, and compress their JavaScript output into your production builds.\n\n<h2>Use</h2>\n<p>First, create a coffee script like:</p>\n\n<pre><code class='javascript'>console.log \"There are no () around this string!\"</code></pre><p>Save this in a file named <code>log.coffee</code>.</p>\n<p>Next, you have to require the <code>steal/coffee</code> plugin and then use\nsteal.coffee to load your coffee script:\n</p>\n\n<pre><code class='javascript'>steal('steal/coffee').then(function(){\n  steal.coffee('log');\n});</code></pre>\n\n<p>Loads CoffeeScript files relative to the current file.  It's expected that all\nCoffeeScript files end with <code>coffee</code>.</p>", "title": "CoffeeScript", "parents": ["steal.static.type"], "plugin": "steal/coffee", "params": {"path": {"order": 0, "description": "<p>the relative path from the current file to the coffee file.\nYou can pass multiple paths.</p>", "name": "path", "type": "String+", "optional": false}}, "ret": {"description": "<p>returns the steal function.</p>", "type": "steal"}, "src": {"query": "", "fragment": "", "path": "steal/coffee/coffee.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 5, "children": []})
c({"name": "steal.parse", "type": "class", "comment": "<p>Returns an pull parser useful for walking through\ntoken streams.</p>\n\n<pre><code>var p = steal.parse(\"  steal.dev.log('fo(')  \");\n\n//parses until it finds thing(\np.until( [ \"thing\", \"(\" ] );\n\n//parse until it finds the matching ) to (\np.partner(\"(\");\n</code></pre>\n\n<h2>API</h2>", "parents": ["stealjs"], "construct": "", "ret": {"description": "<p>an object that can be used to pull tokens.</p>", "type": "steal.parse"}, "params": {"str": {"order": 0, "description": "", "name": "str", "type": "String", "optional": false}}, "src": {"query": "", "fragment": "", "path": "steal/parse/parse.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 32, "children": ["steal.parse.ignoreComments", "steal.parse.moveNext", "steal.parse.next", "steal.parse.cur", "steal.parse.partner", "steal.parse.until"]})
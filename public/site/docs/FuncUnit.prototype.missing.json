c({"name": "FuncUnit.prototype.missing", "params": {"timeout": {"description": "<p>overrides FuncUnit.timeout.  If provided, the wait will fail if not completed before this timeout.</p>", "type": "Number", "optional": true, "order": 0, "name": "timeout"}, "success": {"description": "<p>a callback that is run after the selector exists, but before the next action</p>", "type": "Function", "optional": true, "order": 1, "name": "success"}, "message": {"description": "<p>if provided, an assertion will be passed when this wait condition completes successfully</p>", "type": "String", "optional": true, "order": 2, "name": "message"}}, "ret": {"description": "<p>returns the funcUnit for chaining. </p>", "type": "FuncUnit"}, "type": "function", "parents": ["FuncUnit.prototype"], "comment": "<p>Waits until no elements are matched by the selector.  Missing is equivalent to calling\n<code>.size(0, success);</code></p>\n\n<pre><code class='javascript'>//waits until #foo leaves before continuing to the next action.\nS(\"#foo\").missing()</code></pre>", "src": {"query": "", "fragment": "", "path": "funcunit/browser/waits.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 177, "children": []})
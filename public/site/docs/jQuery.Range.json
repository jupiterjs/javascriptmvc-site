c({"name": "jQuery.Range", "children": ["jQuery.fn.range", "jQuery.Range", "jQuery.Range.static", "jQuery.Range.prototype"], "type": "page", "comment": "<p>Depending on the object passed, the selected text will be different.</p>\n\n<p><code>jQuery.Range</code> provides text range helpers for creating, moving, and comparing ranges cross browser. You can get the currently selected range by calling <a href=\"jQuery.Range.static.current\">$.Range.current()</a> a new range can be created by passing</p>\n\n<ul>\n<li><strong>undefined or null</strong> - returns a range with nothing selected</li>\n<li><strong>HTMLElement</strong> - returns a range with the node's text selected</li>\n<li><p><strong>Point</strong> - returns a range at the point on the screen.  The point can be specified like:</p>\n\n<pre><code>//client coordinates\n{clientX: 200, clientY: 300}\n//page coordinates\n{pageX: 200, pageY: 300}\n{top: 200, left: 300}\n</code></pre></li>\n<li><p><strong>TextRange</strong> a raw text range object.</p></li>\n</ul>\n\n<p>to the constructor.</p>\n\n<h2>$.Range</h2>\n\n<p>An instance of $.Range offers the following methods:</p>\n\n<ul>\n<li><code>[jQuery.Range::clone clone]</code> - clones the range and returns a new $.Range object</li>\n<li><code>[jQuery.Range::collapse collapse]</code> - clones the range and returns a new <code>$.Range</code> object</li>\n<li><code>[jQuery.Range::compare compare]</code> - compares one range to another range</li>\n<li><code>[jQuery.Range::end end]</code> - sets or returns the end of the range</li>\n<li><code>[jQuery.Range::move move]</code> - move the endpoints of a range relative to another range</li>\n<li><code>[jQuery.Range::overlaps overlaps]</code> - returns if any portion of these two ranges overlap</li>\n<li><code>[jQuery.Range::parent parent]</code> - returns the most common ancestor element of the endpoints in the range</li>\n<li><code>[jQuery.Range::rect rect]</code> - returns the bounding rectangle of this range</li>\n<li><code>[jQuery.Range::rects rects]</code> - returns the client rects</li>\n<li><code>[jQuery.Range::start start]</code> - sets or returns the beginning of the range</li>\n<li><code>[jQuery.Range::toString toString]</code> - returns the text of the range</li>\n</ul>\n\n<p>Note, that the container returned by [jQuery.Range::start start] and [jQuery.Range::end end] can be a text node or cdata section (see <a href=\"https://developer.mozilla.org/en/nodeType\">node types</a>). It can be checked by comparing the returned elements <code>nodeType</code> with <code>Node.TEXT_NODE</code> or <code>Node.CDATA_SECTION_NODE</code> which you will need to get the element containing the selected text:</p>\n\n<pre><code>var startNode = range.start().container;\nif( startNode.nodeType === Node.TEXT_NODE ||\n  startNode.nodeType === Node.CDATA_SECTION_NODE ) {\n  startNode = startNode.parentNode;\n}\n$(startNode).addClass('highlight');\n</code></pre>\n\n<h2>Examples</h2>\n\n<p>Consider an HTML element like</p>\n\n<pre><code>&lt;div id=\"text\"&gt;This is some text&lt;/div&gt;`\n</code></pre>\n\n<p><code>$.Range</code> can be used like this:</p>\n\n<pre><code>// Get a text range for #text\nvar range = $('#text').range();\n\n// Move the start 5 characters to the right\nrange.start('+5');\n\n// Move the end 5 characters to the left\nrange.end('-5');\n\n// Return the range text\nrange.toString() // is some\n\n// Select the current range\nrange.select();\n\n // get the startOffset of the range and the container\n range.start() //-&gt; { offset: 5, container: HTMLELement }\n\n //get the most common ancestor element\n var parent = range.parent();\n\n //select the parent\n var range2 = new $.Range(parent);\n</code></pre>", "parents": ["jquerypp", "jQuery.Range"], "params": {"range": {"order": 0, "description": "<p>An object specifiying a\nrange.  Depending on the object, the selected text will be different.  $.Range supports the\nfollowing types</p>\n\n<ul>\n<li><strong>undefined or null</strong> - returns a range with nothing selected</li>\n<li><strong>HTMLElement</strong> - returns a range with the node's text selected</li>\n<li><p><strong>Point</strong> - returns a range at the point on the screen.  The point can be specified like:</p>\n\n<pre><code>//client coordinates\n{clientX: 200, clientY: 300}\n\n\n//page coordinates\n{pageX: 200, pageY: 300}\n{top: 200, left: 300}\n</code></pre></li>\n<li><p><strong>TextRange</strong> a raw text range object.</p></li>\n</ul>", "name": "range", "type": "TextRange|HTMLElement|Point", "optional": true}}, "src": "jquery/dom/range/range.md", "line": 38})
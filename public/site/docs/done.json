c({"name": "done", "type": "page", "comment": "<p>JavaScriptMVC 3.3 introduces a lot of new features to build large and responsive applications. As such, there are a few changes from 3.2 and this guide walks through the API differences between the versions.</p>\n\n<h2>Steal</h2>\n\n<p>[stealjs | Steal] in 3.3 has support for AMD modules. Steal will still load resources as 3.2, however will also now follow the pattern for dependencies represented by a string id.</p>\n\n<p>So, as a simple example:</p>\n\n<pre><code>steal('fooResource', function(foo) {});\n</code></pre>\n\n<p>In the above example, \"foo\" refers to the module returned by fooResource/fooResource.js.</p>\n\n<p>This leads to the gotcha when defining \"$\" in the previous syntax. So code that used to look like:</p>\n\n<pre><code>steal('jquery', 'someResource')\n.then('someController', function($) {});\n</code></pre>\n\n<p>The above will not work as expected, because \"$\" will refer to a module returned by \"someController\" or undefined. In 3.3, a simple change will fix this issue for jQuery users:</p>\n\n<pre><code>steal('jquery', 'someResource')\n.then('someController', function() {});\n</code></pre>\n\n<h2>$.Class.prototype.callback</h2>\n\n<p>\"callback\" has been deprecated and is now \"proxy\" to match jQuery's API.</p>\n\n<p>3.2:</p>\n\n<pre><code>$.Controller('foo', {}, {\n    init: function() {\n        $.get('/resource', this.callback('render'));\n    },\n\n    render: function() {}\n});\n</code></pre>\n\n<p>3.3:</p>\n\n<pre><code>$.Controller('foo', {}, {\n    init: function() {\n        $.get('/resource', this.proxy('render'));\n    },\n\n    render: function() {}\n});\n</code></pre>\n\n<h2>$.View</h2>\n\n<p>$.View() now returns a document fragment to aid with faster rendering within your application. However, when nesting templates, you'll need the actual html string returned by $.View.render as opposed to the document fragment.</p>\n\n<p>Within your EJS templates in 3.2:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;%== $.View('//sometemplate.ejs', {}) %&gt;\n&lt;/div&gt;\n</code></pre>\n\n<p>3.3:</p>\n\n<pre><code>&lt;div&gt;\n    &lt;%== $.View.render('//sometemplate.ejs', {}) %&gt;\n&lt;/div&gt;\n</code></pre>", "title": "Upgrading to 3.3", "parents": ["tutorials"], "order": 11, "src": "tutorials/done.md", "children": []})
c({"name": "README", "type": "page", "comment": "<p>The repository at https://github.com/mustache/spec is the formal standard for\nMustache.  It defines both normal usage and edge-case behavior for libraries\nparsing the Mustache templating language (or a superset thereof).</p>\n\n<p>The specification is developed as a series of YAML files, under the <code>specs</code>\ndirectory.</p>\n\n<h2>Versioning</h2>\n\n<p>This specification is being <a href=\"http://semver.org\">semantically versioned</a>.\nRoughly described, major version changes will always represent backwards\nincompatible changes, minor version changes will always represent new language\nfeatures and will be backwards compatible, and patch ('tiny') version changes\nwill always be bug fixes.  For the purposes of semantic versioning, the public\nAPI is the contents of the <code>specs</code> directory and the algorithm for testing\nagainst it.</p>\n\n<p>Mustache implementations SHOULD report the most recent version of the spec\n(major and minor version numbers).  If an implementation has support for any\noptional modules, they SHOULD indicate so with a remark attached to the\nversion number (e.g. \"vX.Y, including lambdas\" or \"v.X.Y+Î»\").  It is\nRECOMMENDED that implementations not supporting at least v1.0.0 of this spec\nrefer to themselves as \"Mustache-like\", or \"Mustache-inspired\".</p>\n\n<h2>Alternate Formats</h2>\n\n<p>Since YAML is a reasonably complex format that not every language has good\ntools for working with, we also provide JSON versions of the specs on a\nbest-effort basis.</p>\n\n<p>These should be identical to the YAML specifications, but if you find the need\nto regenerate them, they can be trivially rebuilt by invoking <code>rake build</code>.</p>\n\n<p>It is also worth noting that some specifications (notably, the lambda module)\nrely on YAML \"tags\" to denote special types of data (e.g. source code).  Since\nJSON offers no way to denote this, a special key (\"<code>__tag__</code>\") is injected\nwith the name of the tag as its value.  See <code>TESTING.md</code> for more information\nabout handling tagged data.</p>\n\n<h2>Optional Modules</h2>\n\n<p>Specification files beginning with a tilde (<code>~</code>) describe optional modules.\nAt present, the only module being described as optional is regarding support\nfor lambdas.  As a guideline, a module may be a candidate for optionality\nwhen:</p>\n\n<ul>\n<li>It does not affect the core syntax of the language.</li>\n<li>It does not significantly affect the output of rendered templates.</li>\n<li>It concerns implementation language features or data types that are not\ncommon to or core in every targeted language.</li>\n<li>The lack of support by an implementation does not diminish the usage of\nMustache in the target language.</li>\n</ul>\n\n<p>As an example, the lambda module is primarily concerned with the handling of a\nparticular data type (code).  This is a type of data that may be difficult to\nsupport in some languages, and users of those languages will not see the lack\nas an 'inconsistency' between implementations.</p>\n\n<p>Support for specific pragmas or syntax extensions, however, are best managed\noutside this core specification, as adjunct specifications.</p>\n\n<p>Implementors are strongly encouraged to support any and all modules they are\nreasonably capable of supporting.</p>", "src": "can/view/mustache/spec/README.md", "children": []})
c({"name": "can.isFunction", "type": "function", "comment": "<p><code>can.isFunction(object)</code> returns if an object is a function similar to\n[http://api.jquery.com/jQuery.isFunction/ jQuery.isFunction].</p>\n\n<pre><code> can.isFunction({})           //-&gt; false\n can.isFunction(function(){}) //-&gt; true\n</code></pre>", "parents": ["can.util"], "params": {"object": {"order": 0, "description": "<p>to evaluate if is function</p>", "name": "object", "type": "Object", "optional": false}}, "ret": {"description": "<p>Whether the object is a function</p>", "type": "Boolean"}, "src": {"query": "", "fragment": "", "path": "can/util/can.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 141, "children": []})
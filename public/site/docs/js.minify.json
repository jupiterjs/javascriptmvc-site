c({"name": "js.minify", "params": {"source": {"description": "<ul>\n<li>the JS source code</li>\n</ul>", "type": "Source", "optional": false, "order": 0, "name": "source"}, "options": {"description": "<ul>\n<li><p>options to configure the minification:</p>\n\n<ul><li>quiet - should the compression happen w/o errors</li>\n<li>compressor - which minification engine, defaults to localClosure</li>\n<li><p>currentLineMap - a map of lines to JS files, used for error reporting when minifying\nseveral files at once. EX:</p>\n\n<p>{0: \"foo.js\", 100: \"bar.js\"}</p></li></ul></li>\n</ul>", "type": "Object", "optional": true, "order": 1, "name": "options"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p>Minifies JavaScript</p>", "src": {"query": "", "fragment": "", "path": "steal/build/js/jsminify.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 46, "children": []})
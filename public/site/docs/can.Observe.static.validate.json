c({"name": "can.Observe.static.validate", "type": "function", "comment": "<p><code>validate(attrNames, [options,] validateProc(value, attrName) )</code> validates each of the \nspecified attributes with the given <code>validateProc</code> function.  The function\nshould return a value if there is an error.  By default, the return value is\nthe error message.  Validations should be set in the Constructor's static init method.</p>\n\n<p>The following example validates that a person's age is a number:</p>\n\n<pre><code>Person = can.Observe({\n    init : function(){\n      this.validate([\"age\"], function(val){\n        if( typeof val === 'number' ){\n          return \"must be a number\"\n        }\n      })\n    }\n},{})\n</code></pre>\n\n<p>The error message can be overwritten with <code>options</code> <strong>message</strong> property:</p>\n\n<pre><code>Person = can.Observe({\n    init : function(){\n      this.validate(\n        \"age\", \n      {message: \"must be a number\"}, \n      function(val){\n          if( typeof val === 'number' ){\n            return true\n          }\n      })\n  }\n},{})\n</code></pre>", "parents": ["can.Observe.validations"], "params": {"attrNames": {"order": 0, "description": "<p>Attribute name(s) to to validate</p>", "name": "attrNames", "type": "Array|String", "optional": false}, "options": {"order": 1, "description": "<p>Options for the \nvalidations.  Valid options include 'message' and 'testIf'.</p>", "name": "options", "type": "Object", "optional": true}, "validateProc(value,attrName)": {"order": 2, "description": "<p>Function used to validate each \ngiven attribute. Returns nothing if valid and an error message \notherwise. Function is called in the instance context and takes the \n<code>value</code> and <code>attrName</code> to validate.</p>", "name": "validateProc(value,attrName)", "type": "Function", "optional": false}}, "src": {"query": "", "fragment": "", "path": "can/observe/validations/validations.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 75, "children": []})
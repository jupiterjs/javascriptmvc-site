c({"name": "can.Observe.backup", "children": ["can.Observe.prototype.backup", "can.Observe.prototype.isDirty", "can.Observe.prototype.restore"], "type": "page", "comment": "<p>You can backup and restore [can.Observe] data with the can.Observe.backup plugin.\nTo backup an observe instance call [can.Observe.prototype.backup backup] like:</p>\n\n<pre><code>var recipe = new can.Observe({\n  name : 'Pancakes',\n  ingredients : [{\n      name : \"eggs\",\n      amount : '1'\n  }, {\n      name : \"flour\",\n      amount : '1 cup'\n  }, {\n      name : \"milk\",\n      amount : '1 1/4 cup'\n  }]\n});\n\nrecipe.backup();\n</code></pre>\n\n<p>You can check if the instance has changed with [can.Observe.prototype.isDirty isDirty]:</p>\n\n<pre><code>recipe.attr('name', 'Potcakes');\nrecipe.isDirty() //-&gt; true\n</code></pre>\n\n<p>Finally, you can restore the original attributes with [can.Observe.prototype.restore restore]:</p>\n\n<pre><code>recipe.restore();\nrecipe.name // -&gt; \"Pancakes\"\n</code></pre>\n\n<p>By default only direct attributes are checked and restored. Pass true if you want <em>isDirty</em> and\n<em>restore</em> to also include nested observe instances and [can.Model] associations.</p>\n\n<p>See this in action:</p>\n\n<div class='demo_wrapper' data-demo-src='can/observe/backup/backup.html'></div>", "parents": ["can.Observe"], "plugin": "can/observe/backup", "test": "can/observe/backup/qunit.html", "download": "http://donejs.com/can/dist/can.observe.backup.js", "src": "can/observe/backup/backup.md"})
c({"name": "Syn.keycodes", "type": "attribute", "parents": ["Syn"], "comment": "<p>A list of the keys and their keycodes codes you can type.\nYou can add type keys with</p>\n\n<pre><code class='javascript'>Syn('key','delete','title');\n\n//or \n\nSyn('type','One Two Three[left][left][delete]','title')</code></pre>\n\n<p>The following are a list of keys you can type:</p>\n\n<pre><code class='text'>\\b        - backspace\n\\t        - tab\n\\r        - enter\n' '       - space\na-Z 0-9   - normal characters\n/!@#$*,.? - All other typeable characters\npage-up   - scrolls up\npage-down - scrolls down\nend       - scrolls to bottom\nhome      - scrolls to top\ninsert    - changes how keys are entered\ndelete    - deletes the next character\nleft      - moves cursor left\nright     - moves cursor right\nup        - moves the cursor up\ndown      - moves the cursor down\nf1-12     - function buttons\nshift, ctrl, alt - special keys\npause-break      - the pause button\nscroll-lock      - locks scrolling\ncaps      - makes caps\nescape    - escape button\nnum-lock  - allows numbers on keypad\nprint     - screen capture</code></pre>     ", "src": {"query": "", "fragment": "", "path": "funcunit/syn/key.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 88, "children": []})
c({"name": "jQuery.Drag.prototype.limit", "params": {"container": {"description": "<p>the jQuery-wrapped container element you do not want the drag element to escape.</p>", "type": "jQuery", "optional": false, "order": 0, "name": "container"}, "center": {"description": "<p>can set the limit to the center of the object.  Can be \n  'x', 'y' or 'both'.  By default it will keep the outer edges of the moving element within the\ncontainer element.  If you provide x, it will keep the horizontal center of the moving element\nwithin the container element.  If you provide y, it will keep the vertical center of the moving\nelement within the container element.  If you provide both, it will keep the center of the \nmoving element within the containing element.</p>", "type": "String", "optional": true, "order": 1, "name": "center"}}, "ret": {"description": "<p>returns the drag for chaining.</p>", "type": "drag"}, "type": "function", "parents": ["jQuery.Drag.prototype"], "comment": "<p><code>drag.limit(container, [center])</code> limits a drag to a containing element.</p>\n\n<pre><code>$(\"#todos\").on(\".todo\",\"draginit\", function( ev, drag ) {\n  drag.limit($(\"#todos\").parent())\n})\n</code></pre>", "plugin": "jquery/event/drag/limit", "download": "http://jmvcsite.heroku.com/pluginify?plugins[]=jquery/event/event/drag/limit/limit.js", "src": {"query": "", "fragment": "", "path": "jquery/event/drag/limit/limit.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 8, "children": []})
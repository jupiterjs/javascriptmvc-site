c({"name": "can.Observe.List.prototype.unshift", "type": "function", "parents": ["can.Observe.List.prototype"], "comment": "<p>Add items to the start of the list.  This is very similar to\n[can.Observe.List::push can.Observe.prototype.List].  Example:</p>\n\n<pre><code>var list = new can.Observe.List([\"a\",\"b\"]);\nlist.unshift(1,2,3) //-&gt; 5\n.attr() //-&gt; [1,2,3,\"a\",\"b\"]\n</code></pre>", "params": {"items...": {"order": 0, "description": "<p>items to add to the start of the list.</p>", "name": "items...", "type": "Object", "optional": true}}, "ret": {"description": "<p>the length of the array.</p>", "type": "Number"}, "src": {"query": "", "fragment": "", "path": "can/observe/observe.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1350, "children": []})
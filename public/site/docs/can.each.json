c({"name": "can.each", "type": "function", "comment": "<p><code>can.each(object, function)</code> iterates through an array or object like\nlike [http://api.jquery.com/jQuery.each/ jQuery.each].</p>\n\n<pre><code>can.each([{prop: \"val1\"}, {prop: \"val2\"}], \n    function( value, index ) {\n  // function called with\n  //  index=0 value={prop: \"val1\"}\n  //  index=1 value={prop: \"val2\"}\n})\n</code></pre>", "parents": ["can.util"], "params": {"arr": {"order": 0, "description": "<p>any JS object or array</p>", "name": "arr", "type": "Object", "optional": false}}, "ret": {"description": "<p>the function passed to can.each</p>", "type": "Object"}, "src": {"query": "", "fragment": "", "path": "can/util/can.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 58, "children": []})
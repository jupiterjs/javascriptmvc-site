c({"name": "jQuery.dimensions", "children": ["jQuery.fn.outerWidth", "jQuery.fn.innerWidth", "jQuery.fn.outerHeight", "jQuery.fn.innerHeight"], "type": "page", "comment": "<p><code>jQuery.dimensions</code> adds support for animating and setting inner and outer dimensions.\nIt overwrites</p>\n\n<ul>\n<li><code>[jQuery.fn.outerHeight jQuery.fn.outerHeight(value, includeMargins)]</code></li>\n<li><code>[jQuery.fn.outerWidth jQuery.fn.outerWidth(value, includeMargins)]</code></li>\n<li><code>[jQuery.fn.innerHeight jQuery.fn.innerHeight(value)]</code></li>\n<li><code>[jQuery.fn.innerWidth jQuery.fn.innerWidth(value)]</code></li>\n</ul>\n\n<p>to let you set these properties and extends <a href=\"http://api.jquery.com/animate/\">animate</a> to animate them.</p>\n\n<h2>Use</h2>\n\n<p>When writing reusable plugins, you often want to \nset or animate an element's width and height that include its padding,\nborder, or margin.  This is especially important in plugins that\nallow custom styling.</p>\n\n<h2>Quick Examples</h2>\n\n<pre><code> $('#foo').outerWidth(100).innerHeight(50);\n $('#bar').animate({ outerWidth: 500 });\n $('#bar').animate({\n   outerWidth: 500,\n   innerHeight: 200\n });\n</code></pre>\n\n<h2>Demo</h2>\n\n<div class='demo_wrapper' data-demo-src='jquery/dom/dimensions/dimensions.html'></div>", "parents": ["jquerypp"], "plugin": "jquery/dom/dimensions", "src": "jquery/dom/dimensions/dimensions.md"})
c({"name": "jQuery.Range.prototype.compare", "type": "function", "parents": ["jQuery.Range.prototype"], "comment": "<p><code>range.compare(type, compareRange)</code> compares one range to another range.</p>\n\n<h2>Example</h2>\n\n<pre><code>// compare the highlight element's start position\n// to the start of the current range\n$('#highlight')\n    .range()\n    .compare('START_TO_START', $.Range.current())\n</code></pre>", "params": {"type": {"order": 0, "description": "<p>Specifies the boundary of the\nrange and the <code>compareRange</code> to compare.</p>\n\n<ul>\n<li><code>\"START_TO_START\"</code> - the start of the range and the start of compareRange</li>\n<li><code>\"START_TO_END\"</code> - the start of the range and the end of compareRange</li>\n<li><code>\"END_TO_END\"</code> - the end of the range and the end of compareRange</li>\n<li><code>\"END_TO_START\"</code> - the end of the range and the start of compareRange</li>\n</ul>", "name": "type", "type": "String", "optional": false}, "compareRange": {"order": 1, "description": "<p>The other range\nto compare against.</p>", "name": "compareRange", "type": "$.Range", "optional": false}}, "ret": {"description": "<p>a number indicating if the range\nboundary is before,\nafter, or equal to <code>compareRange</code>'s\nboundary where:</p>\n\n<ul>\n<li>-1 - the range boundary comes before the compareRange boundary</li>\n<li>0 - the boundaries are equal</li>\n<li>1 - the range boundary comes after the compareRange boundary</li>\n</ul>", "type": "Number"}, "src": {"query": "", "fragment": "", "path": "jquery/dom/range/range.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 561, "children": []})
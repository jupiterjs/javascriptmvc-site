c({"name": "jQuery.fn.innerHeight", "type": "function", "comment": "<p><code>jQuery.fn.innerHeight([value])</code> lets you set the inner height of an element where</p>\n\n<pre><code> innerHeight = height + padding\n</code></pre>\n\n<p>Use it like:</p>\n\n<pre><code> $(\"#foo\").innerHeight(100); //sets inner height\n $(\"#foo\").outerHeight(); // returns inner height\n</code></pre>\n\n<p>Or in an animation like:</p>\n\n<pre><code> $('#foo').animate({ innerHeight : 200 });\n</code></pre>\n\n<p>Setting inner height adjusts the height of the element.</p>", "parents": ["jQuery.dimensions"], "params": {"height": {"order": 0, "description": "<p>The inner height to set</p>", "name": "height", "type": "Number", "optional": true}}, "ret": {"description": "<p>Returns the inner height or the jQuery wrapped elements\nif you are setting the inner height.</p>", "type": "jQuery|Number"}, "src": {"query": "", "fragment": "", "path": "jquery/dom/dimensions/dimensions.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 101, "children": []})
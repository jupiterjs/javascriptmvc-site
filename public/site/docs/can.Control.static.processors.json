c({"name": "can.Control.static.processors", "type": "attribute", "parents": ["can.Control.static"], "comment": "<p>An object of <code>{eventName : function}</code> pairs that Control uses to hook up events\nauto-magically.  A processor function looks like:</p>\n\n<pre><code>can.Control.processors.\n  myprocessor = function( el, event, selector, cb, control ) {\n     //el - the control's element\n     //event - the event (myprocessor)\n     //selector - the left of the selector\n     //cb - the function to call\n     //control - the binding control\n  };\n</code></pre>\n\n<p>This would bind anything like: \"foo~3242 myprocessor\".</p>\n\n<p>The processor must return a function that when called, \nunbinds the event handler.</p>\n\n<p>Control already has processors for the following events:</p>\n\n<ul>\n<li>change </li>\n<li>click </li>\n<li>contextmenu </li>\n<li>dblclick </li>\n<li>focusin</li>\n<li>focusout</li>\n<li>keydown </li>\n<li>keyup </li>\n<li>keypress </li>\n<li>mousedown </li>\n<li>mouseenter</li>\n<li>mouseleave</li>\n<li>mousemove </li>\n<li>mouseout </li>\n<li>mouseover </li>\n<li>mouseup </li>\n<li>reset </li>\n<li>resize </li>\n<li>scroll </li>\n<li>select </li>\n<li>submit  </li>\n</ul>\n\n<p>Listen to events on the document or window \nwith templated event handlers:</p>\n\n<pre><code>Sized = can.Control({\n  \"{window} resize\": function(){\n    this.element.width( this.element.parent().width() / 2 );\n  }\n});\n\nnew Sized( $( '#foo' ) );\n</code></pre>", "src": {"query": "", "fragment": "", "path": "can/control/control.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 164, "children": []})
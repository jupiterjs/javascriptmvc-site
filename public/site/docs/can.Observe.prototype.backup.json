c({"name": "can.Observe.prototype.backup", "params": {}, "ret": {"description": "<p>The observe instance</p>", "type": "can.Observe"}, "type": "function", "comment": "<p><code>observe.backup()</code> backs up a [can.Observe] instance, so it can be restored later\nby calling [can.Observe.prototype.restore] or checked if it\nhas changed with [can.Observe.prototype.isDirty]:</p>\n\n<pre><code> var recipe = new can.Observe({\n      name : 'Pancakes',\n      ingredients : [{\n          name : \"eggs\",\n          amount : '1'\n      }, {\n          name : \"flour\",\n          amount : '1 cup'\n      }, {\n          name : \"milk\",\n          amount : '1 1/4 cup'\n      }]\n  });\n\n  recipe.backup();\n</code></pre>", "plugin": "can/observe/backup", "parents": ["can.Observe.backup"], "src": {"query": "", "fragment": "", "path": "can/observe/backup/backup.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 14, "children": []})
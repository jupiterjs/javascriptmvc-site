c({"name": "steal.shim", "type": "attribute", "parents": ["steal"], "comment": "<p>Implements shim support for steal</p>\n\n<p>This function sets up shims for steal. It follows RequireJS' syntax:</p>\n\n<pre><code>steal.config({\n   shim : {\n     jquery: {\n       exports: \"jQuery\"\n     }\n   }\n })\n</code></pre>\n\n<p>You can also set function to explicitely return value from the module:</p>\n\n<pre><code>steal.config({\n   shim : {\n     jquery: {\n       exports: function(){\n         return window.jQuery;\n       }\n     }\n   }\n })\n</code></pre>\n\n<p>This enables steal to pass you a value from library that is not wrapped\nwith steal() call.</p>\n\n<pre><code>steal('jquery', function(j){\n  // j is set to jQuery\n})\n</code></pre>", "src": {"query": "", "fragment": "", "path": "steal/steal.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 2378, "children": []})
c({"name": "funcunit.getters", "type": "page", "comment": "<p>Getter commands are jQuery getter methods. At certain points throughout a test, its necessary \nto gather information about the page and perform assertions.  Unlike FuncUnit API methods, getters <br />\nwork synchronously.</p>\n\n<h2>Getter methods</h2>\n\n<p>Inside FuncUnit callbacks, the S method returns a jQuery collection.  You can perform any jQuery getter method \non it, like [http://api.jquery.com/text/ text], [http://api.jquery.com/val/ val], \n[http://api.jquery.com/width/ width], [http://api.jquery.com/size/ size], etc. Any jQuery method can be used \nas a getter.</p>\n\n<pre><code class='javascript'>S(\".foo\").visible(function(){\n  // perform getters inside wait callbacks\n  var size = S(\".bar\").size();\n})</code></pre>\n\n<h2>Assertions</h2>\n\n<p>To perform assertions, use QUnit assertion methods.</p>\n\n<ul>\n<li>[http://docs.jquery.com/QUnit/ok#statemessage ok]</li>\n<li>[http://docs.jquery.com/QUnit/equal#actualexpectedmessage equal]</li>\n<li>[http://docs.jquery.com/QUnit/notEqual#actualexpectedmessage notEqual]</li>\n<li>[http://docs.jquery.com/QUnit/raises#blockexpectedmessage raises]</li>\n<li>[http://docs.jquery.com/QUnit/deepEqual#actualexpectedmessage deepEqual]</li>\n</ul>\n\n<pre><code class='javascript'>S(\".foo\").visible(function(){\n  // perform assertions inside wait callbacks\n  var size = S(\".bar\").size();\n  ok(size, 5, \"there are 5 bars);\n})</code></pre>\n\n<h2>Tests without assertions</h2>\n\n<p>Its worth noting that its possible to write entire tests without using any getters or assertions. \nAny wait condition will fail an assertion if they reach the timeout before succeeding. </p>\n\n<p>Therefore, entire tests can be written with just action and wait methods. If the tests succeeds, it will finish \nwithout any assertions.  If it fails, it will throw a failed assertion.</p>\n\n<pre><code class='javascript'>test(\"test with waits\", function(){\n  S(\".foo\").click();\n  // if this wait condition never becomes true, test will fail\n  S(\".bar\").visible();\n})</code></pre>\n\n<p>Often, writing a test with assertions adds more unnecessary code.</p>\n\n<pre><code class='javascript'>test(\"with assertions\", function(){\n  S(\".expander\").click()\n    .width(500, function(){\n      // if the wait condition isn't met, this assertion won't run\n      // therefore, this assertion isn't necessary\n      ok(true, \"expander is 500px\");\n    })\n})</code></pre>", "title": "Getters & Assertions", "parents": ["FuncUnit"], "order": 4, "src": "funcunit/pages/assertions.md", "children": []})
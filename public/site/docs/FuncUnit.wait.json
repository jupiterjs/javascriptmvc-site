c({"name": "FuncUnit.wait", "params": {"time": {"description": "<p>The timeout in milliseconds.  Defaults to 5000.</p>", "type": "Number", "optional": true, "order": 0, "name": "time"}, "success": {"description": "<p>A callback that will run \n        after the wait has completed, \n        but before any more queued actions.</p>", "type": "Function", "optional": true, "order": 1, "name": "success"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["FuncUnit"], "comment": "<p>Waits a timeout before running the next command.  Wait is an action and gets \nadded to the queue.</p>\n\n<pre><code class='javascript'>S.wait(100, function(){\n  equals( S('#foo').innerWidth(), 100, \"innerWidth is 100\");\n})</code></pre>", "src": {"query": "", "fragment": "", "path": "funcunit/browser/waits.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 5, "children": []})
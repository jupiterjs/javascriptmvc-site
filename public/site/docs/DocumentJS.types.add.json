c({"name": "DocumentJS.types.add", "type": "class", "comment": "<p>Used to set scope to add to classes or methods in another file. </p>\n\n<h3>Example:</h3>\n\n<pre><code class='javascript'>/**\n* @add jQuery.String.static\n*/\n$.String.\n/**\n* Splits a string with a regex correctly cross browser\n* @param {Object} string\n* @param {Object} regex\n*/\nrsplit = function( string, regex ) {</code></pre>\n\n<p>It's important to note that add must be in its own comment block.</p>\n\n<h3>End Result:</h3>\n\n<p><img class='image_tag' src='jmvc/images/add_tag_example.png' width='970' /> </p>", "tags": ["documentation"], "parents": ["DocumentJS.types"], "src": {"query": "", "fragment": "", "path": "documentjs/types/add.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1, "children": ["DocumentJS.types.add.static"]})
c({"name": "can.Observe.List.prototype.indexOf", "params": {"item": {"description": "<p>the item to look for</p>", "type": "Object", "optional": false, "order": 0, "name": "item"}}, "ret": {"description": "<p>the index of the object in the array or -1.</p>", "type": "Number"}, "type": "function", "parents": ["can.Observe.List.prototype"], "comment": "<p><code>indexOf(item)</code> returns the position of the item in the array.  Returns -1 if the\nitem is not in the array.  Examples:</p>\n\n<pre><code>list = new can.Observe.List([\"a\",\"b\",\"c\"]);\nlist.indexOf(\"b\") //-&gt; 1\nlist.indexOf(\"f\") //-&gt; -1\n</code></pre>", "src": {"query": "", "fragment": "", "path": "can/observe/observe.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1465, "children": []})
c({"name": "jQuery.event.special.dragdown", "type": "attribute", "parents": ["jQuery.event.drag", "jQuery.event.special"], "comment": "<p><code>dragdown</code> is called when a drag movement has started on a mousedown.\nThe event handler gets an instance of [jQuery.Drag] passed as the second\nparameter.  Listening to <code>dragdown</code> allows you to customize \nthe behavior of a drag motion, especially when <code>draginit</code> should be called.</p>\n\n<pre><code>$(\".handles\").delegate(\"dragdown\", function(ev, drag){\n  // call draginit only when the mouse has moved 20 px\n  drag.distance(20);\n})\n</code></pre>\n\n<p>Typically, when a drag motion is started, <code>event.preventDefault</code> is automatically\ncalled, preventing text selection.  However, if you listen to \n<code>dragdown</code>, this default behavior is not called. You are responsible for calling it\nif you want it (you probably do).</p>\n\n<h3>Why might you not want to call <code>preventDefault</code>?</h3>\n\n<p>You might want it if you want to allow text selection on element\nwithin the drag element.  Typically these are input elements.</p>\n\n<pre><code>$(\".handles\").delegate(\"dragdown\", function(ev, drag){\n  if(ev.target.nodeName === \"input\"){\n    drag.cancel();\n  } else {\n    ev.preventDefault();\n  }\n})\n</code></pre>", "src": {"query": "", "fragment": "", "path": "jquery/event/drag/drag.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 618, "children": []})
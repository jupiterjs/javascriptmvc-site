c({"name": "steal.build", "params": {"url": {"description": "<p>a JS moduleId or html page that loads steal to build.</p>", "type": "String", "optional": false, "order": 0, "name": "url"}, "options": {"description": "<p>An object literal with the following optional values:</p>\n\n<ul>\n<li>to - The folder to put the production.js and production.css files. Ex: <code>\"myproject\"</code>.</li>\n<li>minify - <code>true</code> to minify scripts, <code>false</code> if otherwise. Defaults to <code>true</code>.</li>\n<li>depth - The total number of packages to load in production if [steal.packages]\n       is used. Defaults to <code>Infinity</code></li>\n<li>packageSteal - <code>true</code> to package stealjs with <code>production.js</code>. Defaults to <code>false</code>.</li>\n</ul>", "type": "Object", "optional": false, "order": 1, "name": "options"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p><code>steal.build(moduleId, options)</code> builds a JavaScript module along \nwith all of its dependencies. It also builds any packages specified\nby [steal.packages]. </p>\n\n<p>Calling steal's build in rhino might look like:</p>\n\n<pre><code>steal.build('myproject/myproject.js',{\n  to: \"myproject\",\n  depth: 4\n});\n</code></pre>\n\n<p>This could be run on the command-line like:</p>\n\n<pre><code>./js steal/buildjs myproject -to \"myproject\" -depth 4\n</code></pre>\n\n<p>If you used the app [steal.generate generator] to create\nan application, build your project like:</p>\n\n<pre><code>./js myproject/script/build.js\n</code></pre>\n\n<p>Use [steal.build.apps] to build multiple applications at once\nand group shared dependencies into cache-able scripts.</p>\n\n<h2>Building with steal.js.</h2>\n\n<p>Building with steal is easy, just point the <code>steal/buildjs</code> script at your page and\ngive it the name of your application folder:</p>\n\n<p><pre><code class='no-highlight'>js steal/buildjs path/to/page.html -to myapp</code></pre><p>If you generated a steal app or plugin, there's a handy script already ready for you:</p></p>\n\n<p><pre><code class='no-highlight'>js myapp/scripts/build.js</code></pre><h2>Building without steal.js</h2>\nYou can compress and package any page's JavaScript by adding <code>compress=\"true\"</code>\nattributes to your script tag like the following:</p>\n\n<p><pre><code class='html'>&lt;script src=\"file1.js\" type=\"text/javascript\" compress=\"true\">&lt;/script>\n&lt;script src=\"file2.js\" type=\"text/javascript\" compress=\"true\">&lt;/script></code></pre>and then running either:</p>\n\n<p><pre><code class='no-highlight'>js steal/buildjs path/to/page.html -to [OUTPUT_FOLDER]</code></pre>or:</p>\n\n<p><pre><code class='no-highlight'>js steal/buildjs http://hostname/path/page.html -to [OUTPUT<em>FOLDER]</code></pre>This will compress file1.js and file2.js into a file package named production.js an put it in OUTPUT</em>FOLDER.</p>\n\n<h2>Trouble-shooting</h2>\n\n<p><code>steal.build</code> uses EnvJS to simulate a html page and DOM for your \nscripts to run inside. EnvJS is not a full featured browser and\nthe page might not be similar to the pages your app's code\nruns inside. Fortunately, the fixes are easy:</p>\n\n<p>__Prevent DOM manipulations, Ajax calls, or setTimeout's before onload</p>\n\n<p>The easist way to do this is to surround this code with an <code>if(steal.isRhino)</code>\nlike:</p>\n\n<pre><code>if( steal.isRhino ) {\n  $.get(\"/user/current\", function(){  ... })\n}\n</code></pre>\n\n<p><strong>Feature detect calling Canvas and other HTML5 APIs</strong></p>\n\n<p>Instead of doing:</p>\n\n<pre><code>canvas.getContext('2d');\n</code></pre>\n\n<p>Write</p>\n\n<pre><code>if( canvas.getContext ) {\n     canvas.getContext('2d')\n}\n</code></pre>\n\n<p><em>The next version of StealJS will not have this problem.</em></p>", "parents": ["stealjs"], "src": {"query": "", "fragment": "", "path": "steal/build/build.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 8, "children": ["steal.build.pluginify", "steal.build.open", "steal.build.apps", "steal.build.js", "steal.build.css"]})
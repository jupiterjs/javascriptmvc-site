c({"name": "FuncUnit.prototype.visible", "params": {"timeout": {"description": "<p>overrides FuncUnit.timeout.  If provided, the wait will fail if not completed before this timeout.</p>", "type": "Number", "optional": true, "order": 0, "name": "timeout"}, "success": {"description": "<p>a callback that runs after the funcUnit is visible, but before the next action.</p>", "type": "Function", "optional": true, "order": 1, "name": "success"}, "message": {"description": "<p>if provided, an assertion will be passed when this wait condition completes successfully</p>", "type": "String", "optional": true, "order": 2, "name": "message"}}, "ret": {"description": "<p>[funcUnit] returns the funcUnit for chaining.</p>", "type": undefined}, "type": "function", "parents": ["FuncUnit.prototype"], "comment": "<p>Waits until the funcUnit selector is visible.  </p>\n\n<pre><code class='javascript'>//waits until #foo is visible.\nS(\"#foo\").visible()</code></pre>", "src": {"query": "", "fragment": "", "path": "funcunit/browser/waits.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 192, "children": []})
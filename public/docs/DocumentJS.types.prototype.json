c({"name": "DocumentJS.types.prototype", "type": "class", "comment": "<p>Sets the following functions and attributes to be added to Class or Constructor prototype (instance) functions.</p>\n\n<h3>Example</h3>\n\n<pre><code class='javascript'>$.Controller.extend('Cookbook.Controllers.Recipe',\n/* @Static */\n{\n   onDocument: true\n},\n/* @Prototype */\n{\n /**\n  * When the page loads, gets all recipes to be displayed.\n  */\n  load: function(){\n     if(!$(\"#recipe\").length) \n         $(document.body).append($('&lt;div/&gt;').attr('id','recipe'))\n     Cookbook.Models.Recipe.findAll({}, this.callback('list'));\n   },\n   ...</code></pre> ", "tags": ["documentation"], "parents": ["DocumentJS.types"], "src": {"query": "", "fragment": "", "path": "documentjs/types/prototype.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1, "children": ["DocumentJS.types.prototype.static"]})
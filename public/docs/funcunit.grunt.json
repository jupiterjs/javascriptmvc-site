c({"name": "funcunit.grunt", "type": "page", "comment": "<p>[http://gruntjs.com/ Grunt] is a task-based command line build tool for JavaScript projects. FuncUnit tests can be run \nas a grunt build step. When tests fail, the build also fails.</p>\n\n<p>Grunt provides a plugin system to standardize and easily group common tasks like building, linting, and deployment.</p>\n\n<p>The advantage of using FuncUnit with Grunt is once you configure your project, you can simply run <code>grunt test</code> to run all your project tests via phantom on the commandline.  You can even configure your build process to fail when a test is failing.</p>\n\n<p>If you haven't yet, first read up on [funcunit.phantomjs Phantom in NodeJS Mode].  Setting that up is a prerequisite to setting up FuncUnit in Grunt (Grunt is a NodeJS project).</p>\n\n<h2>Install</h2>\n\n<ol>\n<li>Follow the installation instructions to set up [funcunit.phantomjs Phantom in NodeJS Mode].</li>\n<li>Install grunt: <code>npm install grunt -g</code></li>\n<li>Set up a package.json file for your project if you haven't already.  Add [https://npmjs.org/package/grunt-funcunit grunt-funcunit] as an npm dependency in this file.</li>\n</ol>\n\n<pre><code class='javascript'>{\n    \"name\": \"onesearch\",\n    \"version\": \"0.0.1\",\n    \"dependencies\": {\n        \"grunt-funcunit\": \"0.1.0\"\n    },\n    \"engines\": {\n        \"node\": \">=0.8\"\n    }\n}</code></pre>\n\n<ol>\n<li>Run npm install, which will install grunt-funcunit in the node_modules folder.</li>\n<li>Create a grunt.js file if you haven't already and configure funcunit by pointing it to the URL of your main test file:</li>\n</ol>\n\n<pre><code class='javascript'>module.exports = function (grunt) {\n\n    // Project configuration.\n    grunt.initConfig({\n        funcunit: {\n            urls: ['http://localhost/myapp/funcunit.html']\n        }\n    });\n\n    grunt.loadNpmTasks('grunt-funcunit');\n\n    // Default task.\n    grunt.registerTask('default', 'test');\n    grunt.registerTask('test', 'funcunit');\n\n};</code></pre>\n\n<h3>Use</h3>\n\n<p>Once you set this all up, running tests is as simple as <code>grunt test</code>.  You'll see commandline output like this:</p>\n\n<pre><code class='javascript'>Brians-MacBook-Pro:myapp brianmoschel$ grunt test\nRunning \"funcunit\" task\n\n Autocomplete\n  Select and remove item from DOM and searchParams\n    [x] searchParams.Locations is ready and empty\n    [x] Made selection\n    [x] searchParams.Locations has one item added\n....later....\nPASSED\n32 passed, 0 failed\n\nDone, without errors.\n</code></pre>", "title": "Grunt", "parents": ["funcunit.integrations"], "order": 2, "src": "funcunit/pages/grunt.md", "children": []})
c({"name": "developingjmvc", "type": "page", "comment": "<p>Awesome, you want to contribute back some code to JavaScriptMVC, or build your own\ndownload.  This article\nexplains how.</p>\n\n<p>JavaScriptMVC is comprised of several projects, each with \nit's own repository:</p>\n\n<ul>\n<li>[http://github.com/bitovi/steal]</li>\n<li>[http://github.com/bitovi/canjs]</li>\n<li>[http://github.com/bitovi/jquerypp]</li>\n<li>[http://github.com/bitovi/documentjs]</li>\n<li>[http://github.com/bitovi/funcunit]</li>\n</ul>\n\n<p>These are collected in the javascriptmvc repository:</p>\n\n<ul>\n<li>[http://github.com/bitovi/javascriptmvc]</li>\n</ul>\n\n<p>Read how to get, test, and build each project in JavaScriptMVC:</p>\n\n<h2>1.  Get</h2>\n\n<p>In Github, fork the repo you want to make changes to.  Then clone\nthe javascriptmvc repo and install the submodules like:</p>\n\n<pre><code class='javascript'>git clone git@github.com:bitovi/javascriptmvc</code></pre>\n\n<p>Now, open the javascriptmvc folder's .gitmodule file and change the url of the submodule(s)\nyou have forked.  For example, you might change:</p>\n\n<pre><code class='javascript'>    url = git://github.com/bitovi/canjs.git</code></pre>to\n\n<pre><code class='javascript'>    url = git://github.com/justinbmeyer/canjs.git</code></pre>\n\n<p>Now run:</p>\n\n<pre><code class='javascript'>cd javascriptmvc\ngit submodule init\ngit submodule update</code></pre>Finally, you might need <b>cd</b> into each submodule and \nrun\n\n<pre><code class='javascript'>git checkout</code></pre>\n\n<p>Now make your changes!</p>\n\n<h2>2. Test</h2>\n\n<p>To test FuncUnit, Steal, CanJS, and jQuery++ combined open \n<a href='/test.html'>javascriptmvc/test.html</a> in \nevery supported browser and run:</p>\n\n<pre><code class='javascript'>./js test/run.js</code></pre>\n\n<p>To test just the invidual projects, do the following:</p>\n\n<h4>StealJS</h4>\n\n<p>Open <a href='/steal/test/qunit.html'>/steal/test/qunit.html</a> \nin a browser.</p>\n\n<p>Run:</p>\n\n<pre><code class='javascript'>./js steal/test/run.js</code></pre>\n\n<h4>FuncUnit</h4>\n\n<p>Open <a href='/funcunit/funcunit.html'>/funcunit/funcunit.html</a> \nand <a href='/funcunit/qunit.html'>/funcunit/qunit.html</a> in every browser.</p>\n\n<p>Run:</p>\n\n<pre><code class='javascript'>funcunit/envjs funcunit/funcunit.html</code></pre>\n\n<h4>CanJS</h4>\n\n<p>Open <a href='/canjs/qunit.html'>/canjs/qunit.html</a> \nin every browser.</p>\n\n<p>Run:</p>\n\n<pre><code class='javascript'>./js canjs/test/run.js</code></pre>\n\n<h4>jQuery++</h4>\n\n<p>Open <a href='/jquerypp/qunit.html'>/jquerypp/qunit.html</a> \nin every browser.</p>\n\n<p>Run:</p>\n\n<pre><code class='javascript'>./js jquerypp/test/run.js</code></pre>\n\n<h2>3. Build</h2>\n\n<p>Coming soon, but most projects have a build.js and so does framework.</p>\n\n<h2>4. Building the Docs</h2>\n\n<p>Run:</p>\n\n<pre><code class='javascript'>js jmvc\\scripts\\doc.js</code></pre>\n\n<p>If you have problems, you might need to create a <code>jmvc/docs</code> folder.\nPages like this one are found in <code>jmvc/pages/</code>.</p>\n\n<h2>4. Deploying the Docs</h2>\n\n<p>Run:</p>\n\n<pre><code class='javascript'>ruby scripts\\deploy.rb</code></pre>\n\n<p>First you need to add our EC2 private key in the scripts folder, named key.  If you want to \ndeploy, talk to Brian to get access to this key.</p>", "title": "Developing JavaScriptMVC", "src": "site/pages/developingjmvc.md", "children": []})
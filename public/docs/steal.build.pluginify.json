c({"name": "steal.build.pluginify", "params": {"plugin": {"description": "", "type": "Object", "optional": false, "order": 0, "name": "plugin"}, "opts": {"description": "<p>options include:</p>\n\n<ul>\n<li>out - where to put the generated file</li>\n<li>exclude - an array of files to exclude</li>\n<li>nojquery - exclude jquery</li>\n<li>compress - compress the file</li>\n<li>wrapInner - an array containing code you want to wrap the output in [before, after]</li>\n<li>skipAll - don't run any of the code in steal callbacks (used for canjs build)</li>\n<li>shim - add existing global object to modules collection</li>\n<li>standAlone - Only stip</li>\n</ul>", "type": "Object", "optional": false, "order": 1, "name": "opts"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p>Builds a 'steal-less' version of your application.  To use this, files that use steal must\nhave their code within a callback function.</p>\n\n<pre><code>js steal\\pluginify jquery\\controller -nojquery\n</code></pre>", "parents": ["steal.build"], "src": {"query": "", "fragment": "", "path": "steal/build/pluginify/pluginify.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 12, "children": []})
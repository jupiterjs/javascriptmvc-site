c({"name": "can.route.ready", "params": {"val": {"description": "<p>Whether or not to fire the ready event.</p>", "type": "Boolean", "optional": true, "order": 0, "name": "val"}}, "ret": {"description": "<p><code>can.route</code> object.</p>", "type": "can.route"}, "type": "function", "comment": "<p>Indicates that all routes have been added and sets can.route.data\nbased upon the routes and the current hash.</p>\n\n<p>By default, ready is fired on jQuery's ready event.  Sometimes\nyou might want it to happen sooner or earlier.  To do this, call:</p>\n\n<pre><code>can.route.ready(false); //prevents firing by the ready event\ncan.route.ready(true); // fire the first route change\n</code></pre>", "parents": ["can.route"], "src": {"query": "", "fragment": "", "path": "can/route/route.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 281, "children": []})
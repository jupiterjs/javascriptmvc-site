c({"name": "getMostShared", "params": {"files": {"description": "<ul>\n<li>the files object.  </li>\n</ul>", "type": "Object", "optional": false, "order": 0, "name": "files"}}, "ret": {"description": "<p>The sharing object:</p>\n\n<pre><code>{\n  // apps that need this\n  appNames : ['cookbook','mxui/grid','mxui/data/list'],\n  files : [{file1}, {file2}]\n}\n</code></pre>", "type": "sharing"}, "type": "function", "comment": "<p>Goes through the files, makes a <strong>shared</strong> array of \n<strong>sharedSets</strong>. Each\nsharedSet is a collection of <strong>sharings</strong>.  It then\ntakes the last <strong>sharedSet</strong>, finds the <strong>sharing</strong>\nwith the largest totalSize, and returns that\n<strong>sharing</strong>.</p>\n\n<p>A <strong>sharing</strong> is a collection of files that are shared between some\nset of applications.  A 2-order sharing might look like:</p>\n\n<pre><code>{totalSize: 1231, files: [file1, file2], appNames: ['foo','bar']}\n</code></pre>\n\n<p>A sharedSet is collection of sharings that are all shared the \nsame number of times (order).  For example, a sharedSet might have all\n4-order 'sharings', that is files that are shared between \n4 applications.  A 2 order sharedSet might look like:</p>\n\n<pre><code>{\n  'foo,bar' : {totalSize: 1231, files: [], appNames: ['foo','bar']}\n     'bar,car': : {totalSize: 31231, files: [], appNames: ['bar','car']}\n}\n</code></pre>\n\n<p>The <strong>shared</strong> array is an collection of sharedSets ordered by the\norder-number (the number of times a file is shared by an application).</p>\n\n<h2>How it works</h2>\n\n<p>getMostShared is designed to be called until all files have been\nmarked packaged.  Thus, it changes the files by marking files \nas packaged.</p>", "hide": true, "src": {"query": "", "fragment": "", "path": "steal/build/apps/apps.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 244, "children": []})
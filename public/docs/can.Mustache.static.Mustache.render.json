c({"name": "can.Mustache.static.Mustache.render", "params": {"partial": {"description": "", "type": "Object", "optional": false, "order": 0, "name": "partial"}, "context": {"description": "", "type": "Object", "optional": false, "order": 1, "name": "context"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["can.Mustache.static"], "comment": "<p><code>Mustache.render</code> is a helper method that calls\ninto <code>can.view.render</code> passing the partial \nand the context object.  </p>\n\n<p>Its purpose is to determine if the partial object \nbeing passed represents a template like:</p>\n\n<pre><code>    partial === \"movember.mustache\"\n</code></pre>\n\n<p>or if the partial is a variable name that represents\na partial on the context object such as:</p>\n\n<pre><code>    context[partial] === \"movember.mustache\"\n</code></pre>", "src": {"query": "", "fragment": "", "path": "can/view/mustache/mustache.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 876, "children": []})
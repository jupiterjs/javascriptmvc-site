c({"name": "can.Observe.List.prototype.forEach", "params": {"cb": {"description": "", "type": "", "optional": false, "order": 0, "name": "cb"}, "thisarg": {"description": "<p>Object to use as <code>this</code> when executing <code>callback</code></p>", "type": "Object", "optional": true, "order": 1, "name": "thisarg"}, "callback": {"order": 2, "description": "<p>The callback to execute.\nIt gets passed the element and the index in the list.</p>", "name": "callback", "type": "Function", "optional": false}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["can.Observe.List.prototype"], "comment": "<p><code>forEach(callback [, thisarg])</code> calls a function for each element in the list.</p>\n\n<blockquote>\n  <p>Note that [each can.Observe.each] will iterate over the actual properties.</p>\n</blockquote>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\">MDN reference</a></p>", "src": {"query": "", "fragment": "", "path": "can/observe/observe.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1533, "children": []})
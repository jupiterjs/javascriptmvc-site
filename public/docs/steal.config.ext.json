c({"name": "steal.config.ext", "type": "attribute", "parents": ["steal.config"], "comment": "<p><code>steal.config(\"ext\", extensionConfig)</code> configures\nprocessing behavior of moduleId extensions. For example:</p>\n\n<pre><code>steal.config(\"ext\",{\n  js: \"js\",\n  css: \"css\",\n  less: \"steal/less/less.js\",\n  mustache: \"can/view/mustache/mustache.js\"\n})\n</code></pre>\n\n<p><code>extensionConfig</code> maps a filename extension to\nbe processed by a [steal.config.types type] \n(like <code>js: \"js\"</code>) or to a dependency moduleId that\ndefines that type (like <code>less: \"steal/less/less.js\"</code>).</p>", "src": {"query": "", "fragment": "", "path": "steal/steal.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 770, "children": []})
c({"name": "can.Observe.static.triggerBatch", "params": {"item": {"description": "<p>The item the event should happen on.  </p>", "type": "can.Observe", "optional": false, "order": 0, "name": "item"}, "event": {"description": "<ul>\n<li>The event name, ex: <code>change</code>, or an object with an event type, ex: <code>{type: 'change'}</code>.  </li>\n</ul>", "type": "String|Object", "optional": false, "order": 1, "name": "event"}, "args": {"description": "", "type": "", "optional": false, "order": 2, "name": "args"}, "-": {"order": 3, "description": "<p>The arguments to call back the function with.</p>", "name": "-", "type": "Array", "optional": false}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["can.Observe.batchEvents", "can.Observe.static"], "comment": "<p>Creates an event on item, but will not send \nimmediately if collecting events.  </p>", "src": {"query": "", "fragment": "", "path": "can/observe/observe.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 247, "children": []})
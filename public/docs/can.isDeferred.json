c({"name": "can.isDeferred", "type": "function", "comment": "<p><code>can.isDeferred</code> returns if an object is an instance of [can.Deferred].</p>\n\n<h2>Example</h2>\n\n<p>Convert any value to a Deferred:</p>\n\n<p>function convertDeferred(dfd) {\nreturn can.isDeferred(dfd) ? dfd : can.Deferred(dfd);\n}</p>", "parents": ["can.util"], "params": {"str": {"order": 0, "description": "<p>the string to trim</p>", "name": "str", "type": "String", "optional": false}}, "ret": {"description": "<p>the value of the string</p>", "type": "String"}, "src": {"query": "", "fragment": "", "path": "can/util/can.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 0, "children": []})
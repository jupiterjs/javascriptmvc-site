c({"name": "funcunit.actions", "type": "page", "comment": "<p>Actions are used to simulate user behavior such as clicking, typing, moving the mouse.</p>\n\n<h2>Commands</h2>\n\n<ul>\n<li>[FuncUnit.open open] - opens a page.</li>\n<li>[FuncUnit.prototype.click click] - clicks an element (mousedown, mouseup, click).</li>\n<li>[FuncUnit.prototype.dblclick dblclick] - two clicks followed by a dblclick.</li>\n<li>[FuncUnit.prototype.rightClick rightClick] - a right mousedown, mouseup, and contextmenu.</li>\n<li>[FuncUnit.prototype.type type] - types characters into an element.</li>\n<li>[FuncUnit.prototype.move move] - mousemove, mouseover, and mouseouts from one element to another.</li>\n<li>[FuncUnit.prototype.drag drag] - a drag motion from one element to another.</li>\n<li>[FuncUnit.prototype.scroll scroll] - scrolls an element.</li>\n</ul>\n\n<p>Actions run asynchronously, meaning they do not complete all their events immediately. <br />\nHowever, each action is queued so that you can write actions (and waits) linearly.</p>\n\n<pre><code class='javascript'>S('textarea').click().type(\"Hello World\");\n\nS('.resizer').drag(\"+20 +20\");</code></pre>\n\n<h2>Common mistake</h2>\n\n<p>Almost always before performing an action, you should perform a wait that makes sure the \nelement you're operating on is ready.  A common pattern is calling visible before most actions.</p>\n\n<pre><code class='javascript'>S(\".foo\").visible().click()</code></pre>\n\n<p>Without waits, tests may intermittently fail because of timing conditions. When click runs, it immediately \nsimulates a click on the given element.  Often, tests are triggering app behavior that renders elements \nin the page. If that element isn't present before the action runs, the test will fail.</p>", "title": "Actions", "parents": ["FuncUnit"], "order": 2, "src": "funcunit/pages/actions.md", "children": []})
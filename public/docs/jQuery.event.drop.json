c({"name": "jQuery.event.drop", "children": ["jQuery.event.special.dropover", "jQuery.event.special.dropon", "jQuery.event.special.dropout", "jQuery.event.special.dropinit", "jQuery.event.special.dropmove", "jQuery.event.special.dropend", "jQuery.Drop"], "type": "page", "comment": "<p><code>jQuery.event.drop</code> provides drop events for [jQuery.event.drag]. By binding to a \ndrop event, callback functions will be called during the corresponding phase of the drag motion.</p>\n\n<h2>Drop Events</h2>\n\n<p>All drop events are called with the native event, an instance of [jQuery.Drop], and [jQuery.Drag]. The following\ndrop events are supported:</p>\n\n<ul>\n<li>[jQuery.event.special.dropinit dropinit] - the drag motion is started, drop positions are calculated.</li>\n<li>[jQuery.event.special.dropover dropover] - a drag moves over a drop element, called once as the drop is dragged over the element.</li>\n<li>[jQuery.event.special.dropout dropout] - a drag moves out of the drop element.</li>\n<li>[jQuery.event.special.dropmove dropmove] - a drag is moved over a drop element, called repeatedly as the element is moved.</li>\n<li>[jQuery.event.special.dropon dropon] - a drag is released over a drop element.</li>\n<li>[jQuery.event.special.dropend dropend] - the drag motion has completed.</li>\n</ul>\n\n<p>A drop instance supports the following methods:</p>\n\n<ul>\n<li>[$.Drop::cache cache] - cache the position of the drop for faster hit detection</li>\n<li>[$.Drop::cancel cancel] - cancel this drop point from responding to drags</li>\n</ul>\n\n<p>If you are adding drop points after the start of a drag motion, call [$.Drop.compile] to\nre-calculate all drop points.</p>\n\n<h2>Examples</h2>\n\n<p>Here's how to listen for when a drag moves over a drop:</p>\n\n<pre><code>$('.drop').delegate(\"dropover\", function(ev, drop, drag){\n  $(this).addClass(\"drop-over\")\n})\n</code></pre>\n\n<p>A bit more complex example:</p>\n\n<div class='demo_wrapper' data-demo-src='jquery/event/drop/drop.html'></div>\n\n<h2>How it works</h2>\n\n<ol>\n<li><p>When you bind on a drop event, it adds that element to the list of rootElements.\nRootElements might be drop points, or might have delegated drop points in them.</p></li>\n<li><p>When a drag motion is started, each rootElement is queried for the events listening on it.\nThese events might be delegated events so we need to query for the drop elements.</p></li>\n<li><p>With each drop element, we add a Drop object with all the callbacks for that element.\nEach element might have multiple event provided by different rootElements.  We merge\ncallbacks into the Drop object if there is an existing Drop object.</p></li>\n<li><p>Once Drop objects have been added to all elements, we go through them and call draginit\nif available.</p></li>\n</ol>", "parents": ["jquerypp"], "src": "jquery/event/drop/drop.md"})
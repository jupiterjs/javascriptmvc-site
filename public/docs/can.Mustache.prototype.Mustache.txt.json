c({"name": "can.Mustache.prototype.Mustache.txt", "params": {"context": {"description": "<pre><code>The context stack to be used with evaluation.\n</code></pre>", "type": "Object|Array", "optional": false, "order": 0, "name": "context"}, "mode": {"description": "<pre><code>    The mode to evaluate the section with: # for truthy, ^ for falsey\n</code></pre>", "type": "String", "optional": false, "order": 1, "name": "mode"}, "name": {"description": "<pre><code>The string (or sometimes object) to pass to the given helper method.\n</code></pre>", "type": "String|Object", "optional": false, "order": 2, "name": "name"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["can.Mustache.prototype"], "comment": "<p>Evaluates the resulting string based on the context/name.</p>", "hide": true, "src": {"query": "", "fragment": "", "path": "can/view/mustache/mustache.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 585, "children": []})
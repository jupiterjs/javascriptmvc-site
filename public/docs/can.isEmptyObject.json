c({"name": "can.isEmptyObject", "type": "function", "comment": "<p><code>can.isEmptyObject(object)</code> returns if an object has no properties similar to\n[http://api.jquery.com/jQuery.isEmptyObject/ jQuery.isEmptyObject].</p>\n\n<pre><code>can.isEmptyObject({})      //-&gt; true\ncan.isEmptyObject({a:\"b\"}) //-&gt; false\n</code></pre>", "parents": ["can.util"], "params": {"object": {"order": 0, "description": "<p>to evaluate if empty or not</p>", "name": "object", "type": "Object", "optional": false}, "Whether": {"order": 1, "description": "<p>the object is empty</p>", "name": "Whether", "type": "Boolean", "optional": false}}, "src": {"query": "", "fragment": "", "path": "can/util/can.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 111, "children": []})
c({"name": "can.fixture.store.update", "params": {"request": {"description": "", "type": "", "optional": false, "order": 0, "name": "request"}, "response": {"description": "", "type": "", "optional": false, "order": 1, "name": "response"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "comment": "<p><code>store.update(request, response(props,headers))</code> simulates\na request to update an items properties on a server.</p>\n\n<pre><code>todosStore.update({\n  url: \"/todos/5\"\n}, function(props, headers){\n  props.id //-&gt; 5\n  headers.location // \"todos/5\"\n});\n</code></pre>", "parents": ["can.fixture.store"], "src": {"query": "", "fragment": "", "path": "can/util/fixture/fixture.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 650, "children": []})
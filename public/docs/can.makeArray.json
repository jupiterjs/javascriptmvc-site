c({"name": "can.makeArray", "type": "function", "comment": "<p><code>can.makeArray(object)</code> convert an array-like object into a array.</p>\n\n<pre><code>can.makeArray({0 : \"zero\", 1: \"one\", length: 2})\n   // -&gt; [\"zero\",\"one\"]\n</code></pre>", "parents": ["can.util"], "params": {"object": {"order": 0, "description": "<p>to transform into array</p>", "name": "object", "type": "Object", "optional": false}}, "ret": {"description": "<p>converted array</p>", "type": "Array"}, "src": {"query": "", "fragment": "", "path": "can/util/can.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 32, "children": []})
c({"name": "steal.less", "type": "page", "comment": "<p>Lets you build and compile [http://lesscss.org/ Less ] css styles.</p>\n<p>Less is an extension of CSS that adds variables, mixins, and quite a bit more.\nYou can write css like:\n</p>\n\n<pre><code class='css'>@brand_color: #4D926F;\n#header {\n  color: @brand_color;\n}\nh2 {\n  color: @brand_color;\n}</code></pre><h2>Use</h2>\n<p>First, create a less file like:</p>\n\n<pre><code class='css'>@my_color red\n\nbody { color:  @my_color; }</code></pre>\n\n<p>Save this in a file named <code>red.less</code>.</p>\n\n<p>Next, steal the <code>steal/less</code> plugin, wait for it to finish loading\n(by using [steal.static.then then]) and then load the less file:</p>\n\n<pre><code class='javascript'>steal('steal/less').then('./red.less');</code></pre>\n\n<p>Loads Less files relative to the current file.  It's expected that all\nLess files end with <code>less</code>.</p>", "title": "Less", "parents": ["steal.static.type"], "plugin": "steal/less", "src": {"query": "", "fragment": "", "path": "steal/less/less.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 20, "children": []})
c({"name": "steal.parse.partner", "params": {"left": {"description": "<p>a string like (,[,{,&lt;</p>", "type": "String", "optional": false, "order": 0, "name": "left"}, "cb": {"description": "<p>a function that gets called\nwith all tokens between the left and right token.</p>", "type": "Function", "optional": false, "order": 1, "name": "cb"}}, "ret": {"description": "<p>the ending token</p>", "type": "token"}, "type": "function", "parents": ["steal.parse"], "comment": "<p>Parses it until it finds the right partner of the\nleft parameter.</p>\n\n<pre><code>p.partner(\"(\", function(token){\n\n})\n</code></pre>", "src": {"query": "", "fragment": "", "path": "steal/parse/parse.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 133, "children": []})
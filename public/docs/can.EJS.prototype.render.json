c({"name": "can.EJS.prototype.render", "params": {"object": {"description": "<p>data to be rendered</p>", "type": "Object", "optional": false, "order": 0, "name": "object"}, "extraHelpers": {"description": "<p>an object with view helpers</p>", "type": "Object", "optional": true, "order": 1, "name": "extraHelpers"}}, "ret": {"description": "<p>returns the result of the string</p>", "type": "String"}, "type": "function", "parents": ["can.EJS.prototype"], "comment": "<p>Renders an object with view helpers attached to the view.</p>\n\n<pre><code>new can.EJS({text: \"&lt;%= message %&gt;\"}).render({\n  message: \"foo\"\n},{helper: function(){ ... }})\n</code></pre>", "src": {"query": "", "fragment": "", "path": "can/view/ejs/ejs.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 39, "children": []})
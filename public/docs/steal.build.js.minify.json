c({"name": "steal.build.js.minify", "params": {"source": {"description": "<p>the JS source code.</p>", "type": "Source", "optional": true, "order": 0, "name": "source"}, "options": {"description": "<p>options to configure the minification:</p>\n\n<ul>\n<li>compressor \"{String}\" - which minification engine, defaults to <code>\"localClosure\"</code>.</li>\n<li><p>currentLineMap - a map of lines to JS files, used for error reporting when minifying\nseveral files at once. EX:</p>\n\n<pre><code>{0: \"foo.js\", 100: \"bar.js\"}\n</code></pre></li>\n</ul>", "type": "Object", "optional": true, "order": 1, "name": "options"}}, "ret": {"description": "<p>if <code>source</code> is provided, the minified\nsource is returned.  Otherwise a <code>minifier(source, quiet, currentLineMap)</code> function is returned\nwhere:</p>\n\n<ul>\n<li>source - the source code to be minified</li>\n<li>quiet - if minification should be done without reporting errors</li>\n<li>currentLineMap - a line map to resolve paths in grouped source </li>\n</ul>", "type": "String|Function"}, "type": "function", "parents": ["steal.build.js"], "comment": "<p><code>steal.build.js.minify(source, options)</code> minifies the source\nof a JavaScript file.  If <code>source</code> is not provided,\na minifier function is returned.</p>", "src": {"query": "", "fragment": "", "path": "steal/build/js/jsminify.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 58, "children": []})
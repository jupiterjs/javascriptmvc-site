c({"name": "can.Observe.List.prototype.join", "type": "function", "parents": ["can.Observe.List.prototype"], "comment": "<p><code>join(separator)</code> joins the string representation of all elements into a string.</p>\n\n<pre><code> list = new can.Observe.List([\"a\",\"b\",\"c\"]);\n list.join(',') // -&gt; \"a, b, c\"\n</code></pre>\n\n<p><a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/join\">MDN reference</a></p>", "params": {"separator": {"order": 0, "description": "<p>The element separator</p>", "name": "separator", "type": "String", "optional": false}}, "ret": {"description": "<p>The joined string</p>", "type": "String"}, "src": {"query": "", "fragment": "", "path": "can/observe/observe.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1482, "children": []})
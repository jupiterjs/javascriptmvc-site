c({"name": "Syn.prototype.then", "params": {"type": {"description": "<p>The type of event or action to create: \"<em>click\", \"</em>dblclick\", \"<em>drag\", \"</em>type\".</p>", "type": "String", "optional": false, "order": 0, "name": "type"}, "options": {"description": "<p>Optiosn to pass to the event.</p>", "type": "Object", "optional": false, "order": 1, "name": "options"}, "element": {"description": "<p>A element's id or an element.  If undefined, defaults to the previous element.</p>", "type": "String|HTMLElement", "optional": true, "order": 2, "name": "element"}, "callback": {"description": "<p>A function to callback after the action has run, but before any future chained actions are run.</p>", "type": "Function", "optional": true, "order": 3, "name": "callback"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["Syn.prototype"], "comment": "<p>\nThen is used to chain a sequence of actions to be run one after the other.\nThis is useful when many asynchronous actions need to be performed before some\nfinal check needs to be made.\n</p>\n\n<p>The following clicks and types into the <code>id='age'</code> element and then checks that only numeric characters can be entered.</p>\n\n<h3>Example</h3>\n\n<p><pre><code class='javascript'>Syn('click',{},'age')\n  .then('type','I am 12',function(){\n  equals($('#age').val(),\"12\") <br />\n})</code></pre>If the element argument is undefined, then the last element is used.</p>", "src": {"query": "", "fragment": "", "path": "funcunit/syn/synthetic.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 641, "children": []})
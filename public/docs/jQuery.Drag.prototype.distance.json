c({"name": "jQuery.Drag.prototype.distance", "params": {"val": {"description": "<p>The number of pixels the mouse must move before \"draginit\" is called.</p>", "type": "Number", "optional": true, "order": 0, "name": "val"}}, "ret": {"description": "<p>returns the drag instance for chaining if the drag value is being set or the\ndistance value if the distance is being read.</p>", "type": "drag|Number"}, "type": "function", "parents": ["jQuery.Drag.prototype"], "comment": "<p><code>distance([val])</code> sets or reads the distance the mouse must move before a drag motion is started.  This should be set in\n\"dragdown\" and delays \"draginit\" being called until the distance is covered.  The distance\nis measured in pixels.  The default distance is 0 pixels meaning the drag motion starts on the first\nmousemove after a mousedown.</p>\n\n<p>Set this to make drag motion a little \"stickier\" to start.</p>\n\n<pre><code>$(\"#images\").on(\".thumbnail\",\"dragdown\", function(ev, drag){\n  drag.distance(10);\n});\n</code></pre>", "src": {"query": "", "fragment": "", "path": "jquery/event/drag/drag.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 589, "children": []})
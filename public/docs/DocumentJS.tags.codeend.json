c({"name": "DocumentJS.tags.codeend", "type": "class", "comment": "<p>Stops a code block.</p>\n\n<h3>Example:</h3>\n\n<pre><code class='javascript'>\n /* \n  * @codestart\n  *  /* @class\n  *   * Person represents a human with a name.  Read about the \n  *   * animal class [Animal | here].\n  *   * @constructor\n  *   * You must pass in a name.\n  *   * @param {String} name A person's name\n  *   */\n  *   Person = function(name){\n  *      this.name = name\n  *      Person.count ++;\n  *   }\n  *  /* @Static */\n  *  steal.Object.extend(Person, {\n  *      /* Number of People */\n  *      count: 0\n  *  })\n  *  /* @Prototype */\n  *  Person.prototype = {\n  *     /* Returns a formal name \n  *      * @return {String} the name with \"Mrs.\" added\n  *      */\n  *      fancyName : function(){\n  *         return \"Mrs. \"+this.name;\n  *      }\n  *  }\n  * @codeend\n  */\n</code></pre> ", "tags": ["documentation"], "parents": ["DocumentJS.tags"], "src": {"query": "", "fragment": "", "path": "documentjs/tags/codeend.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1, "children": []})
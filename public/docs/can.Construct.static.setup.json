c({"name": "can.Construct.static.setup", "params": {"base": {"description": "<p>the base constructor that is being inherited from</p>", "type": "Object", "optional": false, "order": 0, "name": "base"}, "fullName": {"description": "<p>the name of the new constructor</p>", "type": "String", "optional": true, "order": 1, "name": "fullName"}, "staticProps": {"order": 2, "description": "<p>the static properties of the new constructor</p>", "name": "staticProps", "type": "Object", "optional": true}, "protoProps": {"order": 3, "description": "<p>the prototype properties of the new constructor</p>", "name": "protoProps", "type": "Object", "optional": true}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["can.Construct.static"], "comment": "<p>Setup is called immediately after a constructor function is created and \nset to inherit from its base constructor.  It is called with a base constructor and\nthe params used to extend the base constructor. It is useful for setting up additional inheritance work.</p>\n\n<h2>Example</h2>\n\n<p>The following creates a <code>Base</code> class that when extended, adds a reference to the base\nclass.</p>\n\n<pre><code>Base = can.Construct({\n  setup : function(base, fullName, staticProps, protoProps){\n       this.base = base;\n    // call base functionality\n    can.Construct.setup.apply(this, arguments)\n  }\n},{});\n\nBase.base //-&gt; can.Construct\n\nInherting = Base({});\n\nInheriting.base //-&gt; Base\n</code></pre>\n\n<h2>Base Functionality</h2>\n\n<p>Setup deeply extends the static <code>defaults</code> property of the base constructor with \nproperties of the inheriting constructor.  For example:</p>\n\n<pre><code>MyBase = can.Construct({\n  defaults : {\n    foo: 'bar'\n  }\n},{})\n\nInheriting = MyBase({\n  defaults : {\n    newProp : 'newVal'\n  }\n},{}\n\nInheriting.defaults // -&gt; {foo: 'bar', 'newProp': 'newVal'}\n</code></pre>", "src": {"query": "", "fragment": "", "path": "can/construct/construct.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 87, "children": []})
c({"name": "jQuery.fn.compare", "type": "function", "comment": "<p>Compare two elements and return a bitmask as a number representing the following conditions:</p>\n\n<ul>\n<li><code>000000</code> -> <strong>0</strong>: Elements are identical</li>\n<li><code>000001</code> -> <strong>1</strong>: The nodes are in different documents (or one is outside of a document)</li>\n<li><code>000010</code> -> <strong>2</strong>: #bar precedes #foo</li>\n<li><code>000100</code> -> <strong>4</strong>: #foo precedes #bar</li>\n<li><code>001000</code> -> <strong>8</strong>: #bar contains #foo</li>\n<li><code>010000</code> -> <strong>16</strong>: #foo contains #bar</li>\n</ul>\n\n<p>You can check for any of these conditions using a bitwise AND:</p>\n\n<pre><code>if( $('#foo').compare($('#bar')) &amp; 2 ) {\n  console.log(\"#bar precedes #foo\")\n}\n</code></pre>", "parents": ["jQuery.compare"], "params": {"element": {"order": 0, "description": "<p>an element or jQuery collection to compare against.</p>", "name": "element", "type": "HTMLElement|jQuery", "optional": false}}, "ret": {"description": "<p>A number representing a bitmask deatiling how the elements are positioned from each other.</p>", "type": "Number"}, "src": {"query": "", "fragment": "", "path": "jquery/dom/compare/compare.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 2, "children": []})
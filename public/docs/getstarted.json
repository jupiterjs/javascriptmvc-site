c({"name": "getstarted", "children": ["building.cookbook", "cookbook.creating", "cookbook.documenting", "cookbook.testing"], "type": "page", "comment": "<p>This guide introduces the most important aspects of JavaScriptMVC (JMVC) by \ncreating a simple cookbook application.</p>\n\n<h2>Basics</h2>\n\n<p>Before jumping in, there are some things you should know:</p>\n\n<h3>Purpose</h3>\n\n<p>Use JavaScriptMVC to develop client-side JavaScript apps. JMVC was \ncreated by [http://bitovi.com Bitovi], a JavaScript consulting \ncompany, to create quality, maintainable apps in the shortest \namount of time. Since that time, JMVC has undergone 7 primary production releases\nwith over 100 outside contributors.</p>\n\n<p>Unlike most JavaScript projects, JMVC is a \ntrue <strong>framework</strong>. It supplies best-of-bread solutions for things like:</p>\n\n<ul>\n<li>DOM manipulation</li>\n<li>MVC Architecture</li>\n<li>Testing</li>\n<li>Dependency management</li>\n<li>Documentation</li>\n</ul>\n\n<p>It tightly integrates these solutions so they\nwork together seemlessly. With repeatable development \npatterns, JMVC provides <strong>direction to development</strong> making it easy\nfor teams to work together more \neffectively.</p>\n\n<h3>Sub Projects</h3>\n\n<p>JavaScriptMVC is comprised of 5 sub projects:</p>\n\n<ul>\n<li>[canjs CanJS] - A client side MVC framework</li>\n<li>[jquerypp jQuery++] - A collection of useful DOM helpers and special events for jQuery</li>\n<li>[stealjs StealJS] - A code manager: dependency management, code cleaning, building, etc.</li>\n<li>[DocumentJS DocumentJS] - A documentation engine</li>\n<li>[FuncUnit FuncUnit] - A web testing framework</li>\n</ul>\n\n<h3>Plugins</h3>\n\n<p>Sub-projects are futher broken down into plugins. Just [steal] the ones you need. Plugins load\ntheir own dependencies and won't load duplicate files.  It looks like:</p>\n\n<pre><code>steal('can/control', function( Control ) {\n  Control // -&gt; the Control API\n  ...\n});\n</code></pre>\n\n<div class='whisper'>\nP.S. <code>steal('can/control')</code> adds <code>can/control/control.js</code> to your project.\n</div>\n\n<h2>License</h2>\n\n<p>JavaScriptMVC is MIT with the following exceptions:</p>\n\n<ul>\n<li>[http://www.mozilla.org/rhino/ Rhino] - JS command line ([http://www.mozilla.org/MPL/ MPL] 1.1)</li>\n<li>[http://seleniumhq.org/ Selenium] - Browser Automation ([http://www.apache.org/licenses/LICENSE-2.0 Apache 2])</li>\n</ul>\n\n<p>These exceptions, although permissive licenses themselves, are not linked in your final production build.</p>\n\n<h2>Installing JavaScriptMVC</h2>\n\n<p>Before continuing, make sure you have [installing installed JavaScriptMVC]. Once you\nhave installed JavaScriptMVC, continue to [cookbook.creating Creating Cookbook].</p>", "title": "Get Started with JavaScriptMVC", "parents": ["tutorials"], "order": 2, "src": "tutorials/getstarted/getstarted.md"})
c({"name": "DocumentJS.tags.type", "type": "class", "comment": "<p>Sets the type for the current commented code.</p>\n\n<h3>Example:</h3>\n\n<pre><code class='javascript'>/**\n *\n * @attribute convert\n * @type Object\n * An object of name-function pairs that are used to convert attributes.\n * Check out [jQuery.Model.static.attributes]\n * for examples.\n */\n convert: {\n     \"date\": function( str ) {\n         return typeof str == \"string\" ? (Date.parse(str) == NaN ? null : Date.parse(str)) : str\n     },\n     \"number\": function( val ) {\n         return parseFloat(val)\n     },\n     \"boolean\": function( val ) {\n         return Boolean(val)\n     }\n }</code></pre> ", "tags": ["documentation"], "parents": ["DocumentJS.tags"], "src": {"query": "", "fragment": "", "path": "documentjs/tags/type.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1, "children": []})
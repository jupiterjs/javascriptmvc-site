c({"name": "FuncUnit.prototype.size", "type": "function", "parents": ["FuncUnit.prototype"], "comment": "<p>Gets the number of elements matched by the selector or\nwaits until the the selector is size.  You can also \nprovide a function that continues to the next action when\nit returns true.</p>\n\n<pre><code class='javascript'>S(\".recipe\").size() //gets the number of recipes\n\nS(\".recipe\").size(2) //waits until there are 2 recipes\n\n//waits until size is count\nS(\".recipe\").size(function(size){\n  return size == count;\n})</code></pre>", "params": {"size": {"order": 0, "description": "<p>number or a checking function.</p>", "name": "size", "type": "Number|Function", "optional": true}, "timeout": {"order": 1, "description": "<p>overrides FuncUnit.timeout.  If provided, the wait will fail if not completed before this timeout.</p>", "name": "timeout", "type": "Number", "optional": true}, "success": {"order": 2, "description": "<p>a callback that will run after this action completes.</p>", "name": "success", "type": "Function", "optional": true}, "message": {"order": 3, "description": "<p>if provided, an assertion will be passed when this wait condition completes successfully</p>", "name": "message", "type": "String", "optional": true}}, "ret": {"description": "<p>if the size parameter is not provided, size returns the number\nof elements matched.</p>", "type": "Number"}, "src": {"query": "", "fragment": "", "path": "funcunit/browser/getters.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 12, "children": []})
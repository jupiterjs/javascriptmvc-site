c({"name": "can.Observe.static.keys", "params": {"observe": {"description": "<p>The observe to iterate over</p>", "type": "can.Observe", "optional": false, "order": 0, "name": "observe"}}, "ret": {"description": "<p>array An array of the keys on the object.</p>", "type": "Array"}, "type": "function", "parents": ["can.Observe.static"], "comment": "<p><code>can.Observe.keys( observe )</code> iterates over an \nobservable object to get an array of \nits keys. It also </p>\n\n<pre><code>var styles = new can.Observe({\n  color: \"green\",\n  width: \"20px\",\n  height: \"20px\"\n});\n\ncan.Observe.keys\n</code></pre>", "src": {"query": "", "fragment": "", "path": "can/observe/observe.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 273, "children": []})
c({"name": "jQuery.cookie", "params": {"name": {"description": "<p>The name of the cookie.</p>", "type": "String", "optional": true, "order": 0, "name": "name"}, "value": {"description": "<p>The value of the cookie.</p>", "type": "String", "optional": true, "order": 1, "name": "value"}, "options": {"description": "<p>An object literal containing key/value pairs to provide optional cookie attributes. Values can be:</p>\n\n<ul>\n<li><code>expires</code> - Either an integer specifying the expiration date from now on in days or a Date object. If a negative value is specified (e.g. a date in the past), the cookie will be deleted. If set to null or omitted, the cookie will be a session cookie and will not be retained when the the browser exits.</li>\n<li><code>domain</code> - The domain name</li>\n<li><code>path</code> - The value of the path atribute of the cookie (default: path of page that created the cookie).</li>\n<li><code>secure</code> - If true, the secure attribute of the cookie will be set and the cookie transmission will require a secure protocol (like HTTPS).</li>\n</ul>", "type": "Object", "optional": true, "order": 2, "name": "options"}}, "ret": {"description": "<p>the value of the cookie or {undefined} when setting the cookie.</p>", "type": "String"}, "type": "function", "comment": "<p><code>jQuery.cookie(name, [value], [options])</code> lets you create, read and remove cookies. It is the\n<a href=\"https://github.com/carhartl/jquery-cookie\">jQuery cookie plugin</a> written by <a href=\"stilbuero.de\">Klaus Hartl</a>\nand dual licensed under the <a href=\"http://www.opensource.org/licenses/mit-license.php\">MIT</a>\nand <a href=\"http://www.gnu.org/licenses/gpl.html\">GPL</a> licenses.</p>\n\n<h2>Examples</h2>\n\n<p>Set the value of a cookie.</p>\n\n<pre><code> $.cookie('the_cookie', 'the_value');\n</code></pre>\n\n<p>Create a cookie with all available options.</p>\n\n<pre><code> $.cookie('the_cookie', 'the_value', {\n     expires: 7,\n     path: '/',\n     domain: 'jquery.com',\n     secure: true\n });\n</code></pre>\n\n<p>Create a session cookie.</p>\n\n<pre><code> $.cookie('the_cookie', 'the_value');\n</code></pre>\n\n<p>Delete a cookie by passing null as value. Keep in mind that you have to use the same path and domain\nused when the cookie was set.</p>\n\n<pre><code> $.cookie('the_cookie', null);\n</code></pre>\n\n<p>Get the value of a cookie.</p>\n\n<pre><code> $.cookie('the_cookie');\n</code></pre>", "parents": ["jquerypp"], "plugin": "jquery/dom/cookie", "author": "Klaus Hartl/klaus.hartl@stilbuero.de", "src": {"query": "", "fragment": "", "path": "jquery/dom/cookie/cookie.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 1, "children": []})
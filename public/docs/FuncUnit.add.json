c({"name": "FuncUnit.add", "params": {"handler": {"description": "<p>An object that contains the method to run along with other properties:</p>\n\n<ul>\n<li>method : the method to be called.  It will be provided a success and error function to call</li>\n<li>success : an optional callback to be called after the function is done</li>\n<li>error : an error message if the command fails</li>\n<li>timeout : the time until success should be called</li>\n<li>bind : an object that will be 'this' of the success</li>\n<li>type: the type of method (optional)</li>\n</ul>", "type": "Object", "optional": false, "order": 0, "name": "handler"}}, "ret": {"type": "undefined", "description": ""}, "type": "function", "parents": ["FuncUnit"], "comment": "<p>Adds a function to the queue.</p>", "src": {"query": "", "fragment": "", "path": "funcunit/browser/queue.js", "dir": {"prototype": {}}, "filename": {"prototype": {}}, "ext": {"prototype": {}}, "domain": {"prototype": {}}, "isCrossDomain": {"prototype": {}}, "isRelativeToDomain": {"prototype": {}}, "hash": {"prototype": {}}, "search": {"prototype": {}}, "add": {"prototype": {}}, "join": {"prototype": {}}, "normalize": {"prototype": {}}, "isRelative": {"prototype": {}}, "pathTo": {"prototype": {}}, "mapJoin": {"prototype": {}}, "addJS": {"prototype": {}}, "toString": {"prototype": {}}, "insertMapping": {"prototype": {}}}, "line": 64, "children": []})